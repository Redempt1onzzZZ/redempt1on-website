# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: "npm"
      - name: Install
        run: npm ci
      # 分离构建和渲染过程，避免超时
      - name: Build static files
        shell: bash
        run: npm run build
        env:
          NODE_ENV: production
          # Remove Google Analytics tracking
          REACT_APP_GA_TRACKING_ID: ''
      # 单独运行react-snap，如果失败也不影响部署
      - name: Run react-snap with increased timeout
        shell: bash
        run: |
          node node_modules/react-snap/run.js --timeout=60000 || echo "React-snap completed with warnings, continuing deployment"
        env:
          NODE_ENV: production
          # Remove Google Analytics tracking
          REACT_APP_GA_TRACKING_ID: ''
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "build"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
